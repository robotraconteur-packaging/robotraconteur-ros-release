//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService1;
import java.util.*;
import com.robotraconteur.*;
public class testroot_skel extends ServiceSkel {
    protected testroot obj;
    public testroot_skel(Object o) { 
    super(o);
    obj=(testroot)o;
    }
    public void releaseCastObject() { 
    obj=null;
    super.releaseCastObject();
    }
    public MessageElement callGetProperty(String membername) {
    if(membername.equals( "d1"))
    {
    double ret=obj.get_d1();
    return MessageElementUtil.<double[]>packArray("return",new double[] {ret});
    }
    if(membername.equals( "d2"))
    {
    double[] ret=obj.get_d2();
    return MessageElementUtil.<double[]>packArray("return",ret);
    }
    if(membername.equals( "d3"))
    {
    double[] ret=obj.get_d3();
    return MessageElementUtil.<double[]>packArray("return",DataTypeUtil.verifyArrayLength(ret, 16, false));
    }
    if(membername.equals( "d4"))
    {
    double[] ret=obj.get_d4();
    return MessageElementUtil.<double[]>packArray("return",DataTypeUtil.verifyArrayLength(ret, 16, true));
    }
    if(membername.equals( "d5"))
    {
    MultiDimArray ret=obj.get_d5();
    return MessageElementUtil.packMultiDimArray("return",(MultiDimArray)ret);
    }
    if(membername.equals( "d6"))
    {
    MultiDimArray ret=obj.get_d6();
    return MessageElementUtil.packMultiDimArray("return",(MultiDimArray)DataTypeUtil.verifyArrayLength(ret,9,new int[] {3,3}));
    }
    if(membername.equals( "s1"))
    {
    float ret=obj.get_s1();
    return MessageElementUtil.<float[]>packArray("return",new float[] {ret});
    }
    if(membername.equals( "s2"))
    {
    float[] ret=obj.get_s2();
    return MessageElementUtil.<float[]>packArray("return",ret);
    }
    if(membername.equals( "i8_1"))
    {
    byte ret=obj.get_i8_1();
    return MessageElementUtil.<byte[]>packArray("return",new byte[] {ret});
    }
    if(membername.equals( "i8_2"))
    {
    byte[] ret=obj.get_i8_2();
    return MessageElementUtil.<byte[]>packArray("return",ret);
    }
    if(membername.equals( "u8_1"))
    {
    UnsignedByte ret=obj.get_u8_1();
    return MessageElementUtil.<UnsignedBytes>packArray("return",ret.array());
    }
    if(membername.equals( "u8_2"))
    {
    UnsignedBytes ret=obj.get_u8_2();
    return MessageElementUtil.<UnsignedBytes>packArray("return",ret);
    }
    if(membername.equals( "u8_3"))
    {
    MultiDimArray ret=obj.get_u8_3();
    return MessageElementUtil.packMultiDimArray("return",(MultiDimArray)ret);
    }
    if(membername.equals( "i16_1"))
    {
    short ret=obj.get_i16_1();
    return MessageElementUtil.<short[]>packArray("return",new short[] {ret});
    }
    if(membername.equals( "i16_2"))
    {
    short[] ret=obj.get_i16_2();
    return MessageElementUtil.<short[]>packArray("return",ret);
    }
    if(membername.equals( "u16_1"))
    {
    UnsignedShort ret=obj.get_u16_1();
    return MessageElementUtil.<UnsignedShorts>packArray("return",ret.array());
    }
    if(membername.equals( "u16_2"))
    {
    UnsignedShorts ret=obj.get_u16_2();
    return MessageElementUtil.<UnsignedShorts>packArray("return",ret);
    }
    if(membername.equals( "i32_1"))
    {
    int ret=obj.get_i32_1();
    return MessageElementUtil.<int[]>packArray("return",new int[] {ret});
    }
    if(membername.equals( "i32_2"))
    {
    int[] ret=obj.get_i32_2();
    return MessageElementUtil.<int[]>packArray("return",ret);
    }
    if(membername.equals( "i32_huge"))
    {
    int[] ret=obj.get_i32_huge();
    return MessageElementUtil.<int[]>packArray("return",ret);
    }
    if(membername.equals( "u32_1"))
    {
    UnsignedInt ret=obj.get_u32_1();
    return MessageElementUtil.<UnsignedInts>packArray("return",ret.array());
    }
    if(membername.equals( "u32_2"))
    {
    UnsignedInts ret=obj.get_u32_2();
    return MessageElementUtil.<UnsignedInts>packArray("return",ret);
    }
    if(membername.equals( "i64_1"))
    {
    long ret=obj.get_i64_1();
    return MessageElementUtil.<long[]>packArray("return",new long[] {ret});
    }
    if(membername.equals( "i64_2"))
    {
    long[] ret=obj.get_i64_2();
    return MessageElementUtil.<long[]>packArray("return",ret);
    }
    if(membername.equals( "u64_1"))
    {
    UnsignedLong ret=obj.get_u64_1();
    return MessageElementUtil.<UnsignedLongs>packArray("return",ret.array());
    }
    if(membername.equals( "u64_2"))
    {
    UnsignedLongs ret=obj.get_u64_2();
    return MessageElementUtil.<UnsignedLongs>packArray("return",ret);
    }
    if(membername.equals( "str1"))
    {
    String ret=obj.get_str1();
    return MessageElementUtil.packString("return",ret);
    }
    if(membername.equals( "struct1"))
    {
    teststruct1 ret=obj.get_struct1();
    return MessageElementUtil.packStructure("return",ret);
    }
    if(membername.equals( "struct2"))
    {
    teststruct2 ret=obj.get_struct2();
    return MessageElementUtil.packStructure("return",ret);
    }
    if(membername.equals( "is_d1"))
    {
    Map<Integer,double[]> ret=obj.get_is_d1();
    return MessageElementUtil.<Integer,double[]>packMapType("return",ret,Integer.class,double[].class);
    }
    if(membername.equals( "is_d2"))
    {
    Map<String,double[]> ret=obj.get_is_d2();
    return MessageElementUtil.<String,double[]>packMapType("return",ret,String.class,double[].class);
    }
    if(membername.equals( "is_d3"))
    {
    Map<Integer,double[]> ret=obj.get_is_d3();
    return MessageElementUtil.<Integer,double[]>packMapType("return",ret,Integer.class,double[].class);
    }
    if(membername.equals( "is_d4"))
    {
    Map<String,double[]> ret=obj.get_is_d4();
    return MessageElementUtil.<String,double[]>packMapType("return",ret,String.class,double[].class);
    }
    if(membername.equals( "is_d5"))
    {
    Map<Integer,MultiDimArray> ret=obj.get_is_d5();
    return MessageElementUtil.<Integer,MultiDimArray>packMapType("return",ret,Integer.class,MultiDimArray.class);
    }
    if(membername.equals( "is_d6"))
    {
    Map<String,MultiDimArray> ret=obj.get_is_d6();
    return MessageElementUtil.<String,MultiDimArray>packMapType("return",ret,String.class,MultiDimArray.class);
    }
    if(membername.equals( "is_str1"))
    {
    Map<Integer,String> ret=obj.get_is_str1();
    return MessageElementUtil.<Integer,String>packMapType("return",ret,Integer.class,String.class);
    }
    if(membername.equals( "is_str2"))
    {
    Map<String,String> ret=obj.get_is_str2();
    return MessageElementUtil.<String,String>packMapType("return",ret,String.class,String.class);
    }
    if(membername.equals( "is_struct1"))
    {
    Map<Integer,teststruct2> ret=obj.get_is_struct1();
    return MessageElementUtil.<Integer,teststruct2>packMapType("return",ret,Integer.class,teststruct2.class);
    }
    if(membername.equals( "is_struct2"))
    {
    Map<String,teststruct2> ret=obj.get_is_struct2();
    return MessageElementUtil.<String,teststruct2>packMapType("return",ret,String.class,teststruct2.class);
    }
    if(membername.equals( "struct3"))
    {
    com.robotraconteur.testing.TestService2.ostruct2 ret=obj.get_struct3();
    return MessageElementUtil.packStructure("return",ret);
    }
    if(membername.equals( "list_d1"))
    {
    List<double[]> ret=obj.get_list_d1();
    return MessageElementUtil.<double[]>packListType("return",ret,double[].class);
    }
    if(membername.equals( "list_d3"))
    {
    List<double[]> ret=obj.get_list_d3();
    return MessageElementUtil.<double[]>packListType("return",ret,double[].class);
    }
    if(membername.equals( "list_d5"))
    {
    List<MultiDimArray> ret=obj.get_list_d5();
    return MessageElementUtil.<MultiDimArray>packListType("return",ret,MultiDimArray.class);
    }
    if(membername.equals( "list_str1"))
    {
    List<String> ret=obj.get_list_str1();
    return MessageElementUtil.<String>packListType("return",ret,String.class);
    }
    if(membername.equals( "list_struct1"))
    {
    List<teststruct2> ret=obj.get_list_struct1();
    return MessageElementUtil.<teststruct2>packListType("return",ret,teststruct2.class);
    }
    if(membername.equals( "var1"))
    {
    Object ret=obj.get_var1();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var2"))
    {
    Map<Integer,Object> ret=obj.get_var2();
    return MessageElementUtil.<Integer,Object>packMapType("return",ret,Integer.class,Object.class);
    }
    if(membername.equals( "var_num"))
    {
    Object ret=obj.get_var_num();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var_str"))
    {
    Object ret=obj.get_var_str();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var_struct"))
    {
    Object ret=obj.get_var_struct();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var_vector"))
    {
    Object ret=obj.get_var_vector();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var_dictionary"))
    {
    Object ret=obj.get_var_dictionary();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var_list"))
    {
    Object ret=obj.get_var_list();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "var_multidimarray"))
    {
    Object ret=obj.get_var_multidimarray();
    return MessageElementUtil.packVarType("return",ret);
    }
    if(membername.equals( "errtest"))
    {
    double ret=obj.get_errtest();
    return MessageElementUtil.<double[]>packArray("return",new double[] {ret});
    }
    if(membername.equals( "nulltest"))
    {
    teststruct1 ret=obj.get_nulltest();
    return MessageElementUtil.packStructure("return",ret);
    }
    throw new MemberNotFoundException("Member not found");
    }
    public void callSetProperty(String membername, MessageElement m) {
    if(membername.equals( "d1"))
    {
    obj.set_d1((MessageElementUtil.<double[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "d2"))
    {
    obj.set_d2(MessageElementUtil.<double[]>unpackArray(m));
    return;
    }
    if(membername.equals( "d3"))
    {
    obj.set_d3(DataTypeUtil.verifyArrayLength(MessageElementUtil.<double[]>unpackArray(m), 16, false));
    return;
    }
    if(membername.equals( "d4"))
    {
    obj.set_d4(DataTypeUtil.verifyArrayLength(MessageElementUtil.<double[]>unpackArray(m), 16, true));
    return;
    }
    if(membername.equals( "d5"))
    {
    obj.set_d5(MessageElementUtil.unpackMultiDimArray(m));
    return;
    }
    if(membername.equals( "d6"))
    {
    obj.set_d6(DataTypeUtil.verifyArrayLength(MessageElementUtil.unpackMultiDimArray(m),9,new int[] {3,3}));
    return;
    }
    if(membername.equals( "s1"))
    {
    obj.set_s1((MessageElementUtil.<float[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "s2"))
    {
    obj.set_s2(MessageElementUtil.<float[]>unpackArray(m));
    return;
    }
    if(membername.equals( "i8_1"))
    {
    obj.set_i8_1((MessageElementUtil.<byte[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "i8_2"))
    {
    obj.set_i8_2(MessageElementUtil.<byte[]>unpackArray(m));
    return;
    }
    if(membername.equals( "u8_1"))
    {
    obj.set_u8_1(MessageElementUtil.<UnsignedBytes>castDataAndDispose(m).get(0));
    return;
    }
    if(membername.equals( "u8_2"))
    {
    obj.set_u8_2(MessageElementUtil.<UnsignedBytes>unpackArray(m));
    return;
    }
    if(membername.equals( "u8_3"))
    {
    obj.set_u8_3(MessageElementUtil.unpackMultiDimArray(m));
    return;
    }
    if(membername.equals( "i16_1"))
    {
    obj.set_i16_1((MessageElementUtil.<short[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "i16_2"))
    {
    obj.set_i16_2(MessageElementUtil.<short[]>unpackArray(m));
    return;
    }
    if(membername.equals( "u16_1"))
    {
    obj.set_u16_1(MessageElementUtil.<UnsignedShorts>castDataAndDispose(m).get(0));
    return;
    }
    if(membername.equals( "u16_2"))
    {
    obj.set_u16_2(MessageElementUtil.<UnsignedShorts>unpackArray(m));
    return;
    }
    if(membername.equals( "i32_1"))
    {
    obj.set_i32_1((MessageElementUtil.<int[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "i32_2"))
    {
    obj.set_i32_2(MessageElementUtil.<int[]>unpackArray(m));
    return;
    }
    if(membername.equals( "i32_huge"))
    {
    obj.set_i32_huge(MessageElementUtil.<int[]>unpackArray(m));
    return;
    }
    if(membername.equals( "u32_1"))
    {
    obj.set_u32_1(MessageElementUtil.<UnsignedInts>castDataAndDispose(m).get(0));
    return;
    }
    if(membername.equals( "u32_2"))
    {
    obj.set_u32_2(MessageElementUtil.<UnsignedInts>unpackArray(m));
    return;
    }
    if(membername.equals( "i64_1"))
    {
    obj.set_i64_1((MessageElementUtil.<long[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "i64_2"))
    {
    obj.set_i64_2(MessageElementUtil.<long[]>unpackArray(m));
    return;
    }
    if(membername.equals( "u64_1"))
    {
    obj.set_u64_1(MessageElementUtil.<UnsignedLongs>castDataAndDispose(m).get(0));
    return;
    }
    if(membername.equals( "u64_2"))
    {
    obj.set_u64_2(MessageElementUtil.<UnsignedLongs>unpackArray(m));
    return;
    }
    if(membername.equals( "str1"))
    {
    obj.set_str1(MessageElementUtil.unpackString(m));
    return;
    }
    if(membername.equals( "struct1"))
    {
    obj.set_struct1(MessageElementUtil.<teststruct1>unpackStructure(m));
    return;
    }
    if(membername.equals( "struct2"))
    {
    obj.set_struct2(MessageElementUtil.<teststruct2>unpackStructure(m));
    return;
    }
    if(membername.equals( "is_d1"))
    {
    obj.set_is_d1(MessageElementUtil.<Integer,double[]>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_d2"))
    {
    obj.set_is_d2(MessageElementUtil.<String,double[]>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_d3"))
    {
    obj.set_is_d3(MessageElementUtil.<Integer,double[]>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_d4"))
    {
    obj.set_is_d4(MessageElementUtil.<String,double[]>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_d5"))
    {
    obj.set_is_d5(MessageElementUtil.<Integer,MultiDimArray>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_d6"))
    {
    obj.set_is_d6(MessageElementUtil.<String,MultiDimArray>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_str1"))
    {
    obj.set_is_str1(MessageElementUtil.<Integer,String>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_str2"))
    {
    obj.set_is_str2(MessageElementUtil.<String,String>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_struct1"))
    {
    obj.set_is_struct1(MessageElementUtil.<Integer,teststruct2>unpackMapType(m));
    return;
    }
    if(membername.equals( "is_struct2"))
    {
    obj.set_is_struct2(MessageElementUtil.<String,teststruct2>unpackMapType(m));
    return;
    }
    if(membername.equals( "struct3"))
    {
    obj.set_struct3(MessageElementUtil.<com.robotraconteur.testing.TestService2.ostruct2>unpackStructure(m));
    return;
    }
    if(membername.equals( "list_d1"))
    {
    obj.set_list_d1(MessageElementUtil.<double[]>unpackListType(m));
    return;
    }
    if(membername.equals( "list_d3"))
    {
    obj.set_list_d3(MessageElementUtil.<double[]>unpackListType(m));
    return;
    }
    if(membername.equals( "list_d5"))
    {
    obj.set_list_d5(MessageElementUtil.<MultiDimArray>unpackListType(m));
    return;
    }
    if(membername.equals( "list_str1"))
    {
    obj.set_list_str1(MessageElementUtil.<String>unpackListType(m));
    return;
    }
    if(membername.equals( "list_struct1"))
    {
    obj.set_list_struct1(MessageElementUtil.<teststruct2>unpackListType(m));
    return;
    }
    if(membername.equals( "var1"))
    {
    obj.set_var1(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var2"))
    {
    obj.set_var2(MessageElementUtil.<Integer,Object>unpackMapType(m));
    return;
    }
    if(membername.equals( "var_num"))
    {
    obj.set_var_num(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var_str"))
    {
    obj.set_var_str(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var_struct"))
    {
    obj.set_var_struct(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var_vector"))
    {
    obj.set_var_vector(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var_dictionary"))
    {
    obj.set_var_dictionary(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var_list"))
    {
    obj.set_var_list(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "var_multidimarray"))
    {
    obj.set_var_multidimarray(MessageElementUtil.unpackVarType(m));
    return;
    }
    if(membername.equals( "errtest"))
    {
    obj.set_errtest((MessageElementUtil.<double[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "nulltest"))
    {
    obj.set_nulltest(MessageElementUtil.<teststruct1>unpackStructure(m));
    return;
    }
    throw new MemberNotFoundException("Member not found");
    }
    public MessageElement callFunction(String rr_membername, vectorptr_messageelement rr_m) {
    if(rr_membername.equals( "func1"))
    {
    this.obj.func1();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "func2"))
    {
    double d1=(MessageElementUtil.<double[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"d1")))[0];
    double d2=(MessageElementUtil.<double[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"d2")))[0];
    this.obj.func2(d1, d2);
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "func3"))
    {
    double d1=(MessageElementUtil.<double[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"d1")))[0];
    double d2=(MessageElementUtil.<double[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"d2")))[0];
    double rr_ret=obj.func3(d1, d2);
    return MessageElementUtil.<double[]>packArray("return",new double[] {rr_ret});
    }
    if(rr_membername.equals( "meaning_of_life"))
    {
    int rr_ret=obj.meaning_of_life();
    return MessageElementUtil.<int[]>packArray("return",new int[] {rr_ret});
    }
    if(rr_membername.equals( "func_errtest"))
    {
    this.obj.func_errtest();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "func_errtest1"))
    {
    this.obj.func_errtest1();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "func_errtest2"))
    {
    this.obj.func_errtest2();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "func_errtest3"))
    {
    this.obj.func_errtest3();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "o6_op"))
    {
    int op=(MessageElementUtil.<int[]>castDataAndDispose(vectorptr_messageelement_util.findElement(rr_m,"op")))[0];
    this.obj.o6_op(op);
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "pipe_check_error"))
    {
    this.obj.pipe_check_error();
    return new MessageElement("return",new int[] {0});
    }
    if(rr_membername.equals( "test_callbacks"))
    {
    this.obj.test_callbacks();
    return new MessageElement("return",new int[] {0});
    }
    throw new MemberNotFoundException("Member not found");
    }
    public Object getSubObj(String name, String ind) {
    if(name.equals( "o1")) {
    return obj.get_o1();
    }
    if(name.equals( "o2")) {
    return obj.get_o2(Integer.valueOf(ind));
    }
    if(name.equals( "o3")) {
    return obj.get_o3(Integer.valueOf(ind));
    }
    if(name.equals( "o4")) {
    return obj.get_o4(ind);
    }
    if(name.equals( "o5")) {
    return obj.get_o5();
    }
    if(name.equals( "o6")) {
    return obj.get_o6();
    }
    throw new MemberNotFoundException("");
    }
    rr_ev1 rrvar_ev1=new rr_ev1();
    rr_ev2 rrvar_ev2=new rr_ev2();
    public void registerEvents(Object obj1) {
    obj=(testroot)obj1;
    obj.addev1Listener(rrvar_ev1);
    obj.addev2Listener(rrvar_ev2);
    }
    public void unregisterEvents(Object obj1) {
    obj=(testroot)obj1;
    obj.removeev1Listener(rrvar_ev1);
    obj.removeev2Listener(rrvar_ev2);
    }
    private class rr_ev1 implements Action{
    public void action() {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    try {
    testroot_skel.this.innerskel.wrappedDispatchEvent("ev1",rr_param);
    }
    finally {
    rr_param.delete();
    }
    }
    }
    private class rr_ev2 implements Action2<Double, teststruct2>{
    public void action(Double d1, teststruct2 s2) {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    try {
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.<double[]>packArray("d1",new double[] {d1}));
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.packStructure("s2",s2));
    testroot_skel.this.innerskel.wrappedDispatchEvent("ev2",rr_param);
    }
    finally {
    rr_param.delete();
    }
    }
    }
    class rr_cb1 implements Action {
    long endpoint;
    public rr_cb1(long endpoint) { this.endpoint=endpoint; }
    public void action() {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    rr_me=testroot_skel.this.innerskel.wrappedCallbackCall("cb1",this.endpoint,rr_param);
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    }
    class rr_cb2 implements Action2<Double, Double> {
    long endpoint;
    public rr_cb2(long endpoint) { this.endpoint=endpoint; }
    public void action(Double d1, Double d2) {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.<double[]>packArray("d1",new double[] {d1}));
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.<double[]>packArray("d2",new double[] {d2}));
    rr_me=testroot_skel.this.innerskel.wrappedCallbackCall("cb2",this.endpoint,rr_param);
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    }
    class rr_cb3 implements Func2<Double,Double,Double> {
    long endpoint;
    public rr_cb3(long endpoint) { this.endpoint=endpoint; }
    public Double func(Double d1, Double d2) {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.<double[]>packArray("d1",new double[] {d1}));
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.<double[]>packArray("d2",new double[] {d2}));
    rr_me=testroot_skel.this.innerskel.wrappedCallbackCall("cb3",this.endpoint,rr_param);
    return (MessageElementUtil.<double[]>castDataAndDispose(rr_me))[0];
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    }
    class rr_cb_meaning_of_life implements Func<Integer> {
    long endpoint;
    public rr_cb_meaning_of_life(long endpoint) { this.endpoint=endpoint; }
    public Integer func() {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    rr_me=testroot_skel.this.innerskel.wrappedCallbackCall("cb_meaning_of_life",this.endpoint,rr_param);
    return (MessageElementUtil.<int[]>castDataAndDispose(rr_me))[0];
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    }
    class rr_cb_errtest implements Action {
    long endpoint;
    public rr_cb_errtest(long endpoint) { this.endpoint=endpoint; }
    public void action() {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    rr_me=testroot_skel.this.innerskel.wrappedCallbackCall("cb_errtest",this.endpoint,rr_param);
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    }
    public Object getCallbackFunction(long endpoint, String membername) {
    if(membername.equals( "cb1")) {
    return new rr_cb1(endpoint);
    }
    if(membername.equals( "cb2")) {
    return new rr_cb2(endpoint);
    }
    if(membername.equals( "cb3")) {
    return new rr_cb3(endpoint);
    }
    if(membername.equals( "cb_meaning_of_life")) {
    return new rr_cb_meaning_of_life(endpoint);
    }
    if(membername.equals( "cb_errtest")) {
    return new rr_cb_errtest(endpoint);
    }
    throw new MemberNotFoundException("Member not found");
    }
    public  void initPipeServers(Object obj1) {
    obj=(testroot)obj1;
    obj.set_p1(new Pipe<double[]>(innerskel.getPipe("p1")));
    obj.set_p2(new Pipe<teststruct2>(innerskel.getPipe("p2")));
    obj.set_broadcastpipe(new Pipe<double[]>(innerskel.getPipe("broadcastpipe")));
    }
    public void initCallbackServers(Object obj1) {
    obj=(testroot)obj1;
    obj.set_cb1(new CallbackServer<Action>("cb1",this));
    obj.set_cb2(new CallbackServer<Action2<Double, Double>>("cb2",this));
    obj.set_cb3(new CallbackServer<Func2<Double,Double,Double>>("cb3",this));
    obj.set_cb_meaning_of_life(new CallbackServer<Func<Integer>>("cb_meaning_of_life",this));
    obj.set_cb_errtest(new CallbackServer<Action>("cb_errtest",this));
    }
    public void initWireServers(Object obj1) {
    obj=(testroot)obj1;
    obj.set_w1(new Wire<double[]>(innerskel.getWire("w1")));
    obj.set_w2(new Wire<teststruct2>(innerskel.getWire("w2")));
    obj.set_w3(new Wire<MultiDimArray>(innerskel.getWire("w3")));
    obj.set_broadcastwire(new Wire<double[]>(innerskel.getWire("broadcastwire")));
    }
    public WrappedArrayMemoryDirector getArrayMemory(String name) {
    if(name.equals( "m1")) {
    WrappedArrayMemoryDirectorJava<double[]> dir=new  WrappedArrayMemoryDirectorJava<double[]>(obj.get_m1());
    return dir;
    }
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedMultiDimArrayMemoryDirector getMultiDimArrayMemory(String name) {
    if(name.equals( "m2")) {
    WrappedMultiDimArrayMemoryDirectorJava<double[]> dir=new  WrappedMultiDimArrayMemoryDirectorJava<double[]>(obj.get_m2());
    return dir;
    }
    if(name.equals( "m3")) {
    WrappedMultiDimArrayMemoryDirectorJava<UnsignedBytes> dir=new  WrappedMultiDimArrayMemoryDirectorJava<UnsignedBytes>(obj.get_m3());
    return dir;
    }
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedPodArrayMemoryDirector getPodArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedPodMultiDimArrayMemoryDirector getPodMultiDimArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedNamedArrayMemoryDirector getNamedArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedNamedMultiDimArrayMemoryDirector getNamedMultiDimArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public String getRRType() { return "com.robotraconteur.testing.TestService1.testroot"; }
}
