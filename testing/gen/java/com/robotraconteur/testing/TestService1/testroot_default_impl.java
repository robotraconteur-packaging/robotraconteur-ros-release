//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService1;
import java.util.*;
import com.robotraconteur.*;
public class testroot_default_impl implements testroot{
    protected Callback<Action> rrvar_cb1;
    protected Callback<Action2<Double, Double>> rrvar_cb2;
    protected Callback<Func2<Double,Double,Double>> rrvar_cb3;
    protected Callback<Func<Integer>> rrvar_cb_meaning_of_life;
    protected Callback<Action> rrvar_cb_errtest;
    protected double rrvar_d1;
    public double get_d1() { return rrvar_d1; }
    public void set_d1(double value) { rrvar_d1 = value; }
    protected double[] rrvar_d2;
    public double[] get_d2() { return rrvar_d2; }
    public void set_d2(double[] value) { rrvar_d2 = value; }
    protected double[] rrvar_d3;
    public double[] get_d3() { return rrvar_d3; }
    public void set_d3(double[] value) { rrvar_d3 = value; }
    protected double[] rrvar_d4;
    public double[] get_d4() { return rrvar_d4; }
    public void set_d4(double[] value) { rrvar_d4 = value; }
    protected MultiDimArray rrvar_d5;
    public MultiDimArray get_d5() { return rrvar_d5; }
    public void set_d5(MultiDimArray value) { rrvar_d5 = value; }
    protected MultiDimArray rrvar_d6;
    public MultiDimArray get_d6() { return rrvar_d6; }
    public void set_d6(MultiDimArray value) { rrvar_d6 = value; }
    protected float rrvar_s1;
    public float get_s1() { return rrvar_s1; }
    public void set_s1(float value) { rrvar_s1 = value; }
    protected float[] rrvar_s2;
    public float[] get_s2() { return rrvar_s2; }
    public void set_s2(float[] value) { rrvar_s2 = value; }
    protected byte rrvar_i8_1;
    public byte get_i8_1() { return rrvar_i8_1; }
    public void set_i8_1(byte value) { rrvar_i8_1 = value; }
    protected byte[] rrvar_i8_2;
    public byte[] get_i8_2() { return rrvar_i8_2; }
    public void set_i8_2(byte[] value) { rrvar_i8_2 = value; }
    protected UnsignedByte rrvar_u8_1;
    public UnsignedByte get_u8_1() { return rrvar_u8_1; }
    public void set_u8_1(UnsignedByte value) { rrvar_u8_1 = value; }
    protected UnsignedBytes rrvar_u8_2;
    public UnsignedBytes get_u8_2() { return rrvar_u8_2; }
    public void set_u8_2(UnsignedBytes value) { rrvar_u8_2 = value; }
    protected MultiDimArray rrvar_u8_3;
    public MultiDimArray get_u8_3() { return rrvar_u8_3; }
    public void set_u8_3(MultiDimArray value) { rrvar_u8_3 = value; }
    protected short rrvar_i16_1;
    public short get_i16_1() { return rrvar_i16_1; }
    public void set_i16_1(short value) { rrvar_i16_1 = value; }
    protected short[] rrvar_i16_2;
    public short[] get_i16_2() { return rrvar_i16_2; }
    public void set_i16_2(short[] value) { rrvar_i16_2 = value; }
    protected UnsignedShort rrvar_u16_1;
    public UnsignedShort get_u16_1() { return rrvar_u16_1; }
    public void set_u16_1(UnsignedShort value) { rrvar_u16_1 = value; }
    protected UnsignedShorts rrvar_u16_2;
    public UnsignedShorts get_u16_2() { return rrvar_u16_2; }
    public void set_u16_2(UnsignedShorts value) { rrvar_u16_2 = value; }
    protected int rrvar_i32_1;
    public int get_i32_1() { return rrvar_i32_1; }
    public void set_i32_1(int value) { rrvar_i32_1 = value; }
    protected int[] rrvar_i32_2;
    public int[] get_i32_2() { return rrvar_i32_2; }
    public void set_i32_2(int[] value) { rrvar_i32_2 = value; }
    protected int[] rrvar_i32_huge;
    public int[] get_i32_huge() { return rrvar_i32_huge; }
    public void set_i32_huge(int[] value) { rrvar_i32_huge = value; }
    protected UnsignedInt rrvar_u32_1;
    public UnsignedInt get_u32_1() { return rrvar_u32_1; }
    public void set_u32_1(UnsignedInt value) { rrvar_u32_1 = value; }
    protected UnsignedInts rrvar_u32_2;
    public UnsignedInts get_u32_2() { return rrvar_u32_2; }
    public void set_u32_2(UnsignedInts value) { rrvar_u32_2 = value; }
    protected long rrvar_i64_1;
    public long get_i64_1() { return rrvar_i64_1; }
    public void set_i64_1(long value) { rrvar_i64_1 = value; }
    protected long[] rrvar_i64_2;
    public long[] get_i64_2() { return rrvar_i64_2; }
    public void set_i64_2(long[] value) { rrvar_i64_2 = value; }
    protected UnsignedLong rrvar_u64_1;
    public UnsignedLong get_u64_1() { return rrvar_u64_1; }
    public void set_u64_1(UnsignedLong value) { rrvar_u64_1 = value; }
    protected UnsignedLongs rrvar_u64_2;
    public UnsignedLongs get_u64_2() { return rrvar_u64_2; }
    public void set_u64_2(UnsignedLongs value) { rrvar_u64_2 = value; }
    protected String rrvar_str1;
    public String get_str1() { return rrvar_str1; }
    public void set_str1(String value) { rrvar_str1 = value; }
    protected teststruct1 rrvar_struct1;
    public teststruct1 get_struct1() { return rrvar_struct1; }
    public void set_struct1(teststruct1 value) { rrvar_struct1 = value; }
    protected teststruct2 rrvar_struct2;
    public teststruct2 get_struct2() { return rrvar_struct2; }
    public void set_struct2(teststruct2 value) { rrvar_struct2 = value; }
    protected Map<Integer,double[]> rrvar_is_d1;
    public Map<Integer,double[]> get_is_d1() { return rrvar_is_d1; }
    public void set_is_d1(Map<Integer,double[]> value) { rrvar_is_d1 = value; }
    protected Map<String,double[]> rrvar_is_d2;
    public Map<String,double[]> get_is_d2() { return rrvar_is_d2; }
    public void set_is_d2(Map<String,double[]> value) { rrvar_is_d2 = value; }
    protected Map<Integer,double[]> rrvar_is_d3;
    public Map<Integer,double[]> get_is_d3() { return rrvar_is_d3; }
    public void set_is_d3(Map<Integer,double[]> value) { rrvar_is_d3 = value; }
    protected Map<String,double[]> rrvar_is_d4;
    public Map<String,double[]> get_is_d4() { return rrvar_is_d4; }
    public void set_is_d4(Map<String,double[]> value) { rrvar_is_d4 = value; }
    protected Map<Integer,MultiDimArray> rrvar_is_d5;
    public Map<Integer,MultiDimArray> get_is_d5() { return rrvar_is_d5; }
    public void set_is_d5(Map<Integer,MultiDimArray> value) { rrvar_is_d5 = value; }
    protected Map<String,MultiDimArray> rrvar_is_d6;
    public Map<String,MultiDimArray> get_is_d6() { return rrvar_is_d6; }
    public void set_is_d6(Map<String,MultiDimArray> value) { rrvar_is_d6 = value; }
    protected Map<Integer,String> rrvar_is_str1;
    public Map<Integer,String> get_is_str1() { return rrvar_is_str1; }
    public void set_is_str1(Map<Integer,String> value) { rrvar_is_str1 = value; }
    protected Map<String,String> rrvar_is_str2;
    public Map<String,String> get_is_str2() { return rrvar_is_str2; }
    public void set_is_str2(Map<String,String> value) { rrvar_is_str2 = value; }
    protected Map<Integer,teststruct2> rrvar_is_struct1;
    public Map<Integer,teststruct2> get_is_struct1() { return rrvar_is_struct1; }
    public void set_is_struct1(Map<Integer,teststruct2> value) { rrvar_is_struct1 = value; }
    protected Map<String,teststruct2> rrvar_is_struct2;
    public Map<String,teststruct2> get_is_struct2() { return rrvar_is_struct2; }
    public void set_is_struct2(Map<String,teststruct2> value) { rrvar_is_struct2 = value; }
    protected com.robotraconteur.testing.TestService2.ostruct2 rrvar_struct3;
    public com.robotraconteur.testing.TestService2.ostruct2 get_struct3() { return rrvar_struct3; }
    public void set_struct3(com.robotraconteur.testing.TestService2.ostruct2 value) { rrvar_struct3 = value; }
    protected List<double[]> rrvar_list_d1;
    public List<double[]> get_list_d1() { return rrvar_list_d1; }
    public void set_list_d1(List<double[]> value) { rrvar_list_d1 = value; }
    protected List<double[]> rrvar_list_d3;
    public List<double[]> get_list_d3() { return rrvar_list_d3; }
    public void set_list_d3(List<double[]> value) { rrvar_list_d3 = value; }
    protected List<MultiDimArray> rrvar_list_d5;
    public List<MultiDimArray> get_list_d5() { return rrvar_list_d5; }
    public void set_list_d5(List<MultiDimArray> value) { rrvar_list_d5 = value; }
    protected List<String> rrvar_list_str1;
    public List<String> get_list_str1() { return rrvar_list_str1; }
    public void set_list_str1(List<String> value) { rrvar_list_str1 = value; }
    protected List<teststruct2> rrvar_list_struct1;
    public List<teststruct2> get_list_struct1() { return rrvar_list_struct1; }
    public void set_list_struct1(List<teststruct2> value) { rrvar_list_struct1 = value; }
    protected Object rrvar_var1;
    public Object get_var1() { return rrvar_var1; }
    public void set_var1(Object value) { rrvar_var1 = value; }
    protected Map<Integer,Object> rrvar_var2;
    public Map<Integer,Object> get_var2() { return rrvar_var2; }
    public void set_var2(Map<Integer,Object> value) { rrvar_var2 = value; }
    protected Object rrvar_var_num;
    public Object get_var_num() { return rrvar_var_num; }
    public void set_var_num(Object value) { rrvar_var_num = value; }
    protected Object rrvar_var_str;
    public Object get_var_str() { return rrvar_var_str; }
    public void set_var_str(Object value) { rrvar_var_str = value; }
    protected Object rrvar_var_struct;
    public Object get_var_struct() { return rrvar_var_struct; }
    public void set_var_struct(Object value) { rrvar_var_struct = value; }
    protected Object rrvar_var_vector;
    public Object get_var_vector() { return rrvar_var_vector; }
    public void set_var_vector(Object value) { rrvar_var_vector = value; }
    protected Object rrvar_var_dictionary;
    public Object get_var_dictionary() { return rrvar_var_dictionary; }
    public void set_var_dictionary(Object value) { rrvar_var_dictionary = value; }
    protected Object rrvar_var_list;
    public Object get_var_list() { return rrvar_var_list; }
    public void set_var_list(Object value) { rrvar_var_list = value; }
    protected Object rrvar_var_multidimarray;
    public Object get_var_multidimarray() { return rrvar_var_multidimarray; }
    public void set_var_multidimarray(Object value) { rrvar_var_multidimarray = value; }
    protected double rrvar_errtest;
    public double get_errtest() { return rrvar_errtest; }
    public void set_errtest(double value) { rrvar_errtest = value; }
    protected teststruct1 rrvar_nulltest;
    public teststruct1 get_nulltest() { return rrvar_nulltest; }
    public void set_nulltest(teststruct1 value) { rrvar_nulltest = value; }
    public void func1() {
    throw new UnsupportedOperationException();    }
    public void func2(double d1, double d2) {
    throw new UnsupportedOperationException();    }
    public double func3(double d1, double d2) {
    throw new UnsupportedOperationException();    }
    public int meaning_of_life() {
    throw new UnsupportedOperationException();    }
    public void func_errtest() {
    throw new UnsupportedOperationException();    }
    public void func_errtest1() {
    throw new UnsupportedOperationException();    }
    public void func_errtest2() {
    throw new UnsupportedOperationException();    }
    public void func_errtest3() {
    throw new UnsupportedOperationException();    }
    public void o6_op(int op) {
    throw new UnsupportedOperationException();    }
    public void pipe_check_error() {
    throw new UnsupportedOperationException();    }
    public void test_callbacks() {
    throw new UnsupportedOperationException();    }
    protected  Vector<Action> rrvar_ev1=new Vector<Action>();
    public void  addev1Listener(Action listener) {
    synchronized(rrvar_ev1) {
    rrvar_ev1.add(listener);
    }
    }
    public void  removeev1Listener(Action listener) {
    synchronized(rrvar_ev1) {
    rrvar_ev1.remove(listener);
    }
    }
    protected  Vector<Action2<Double, teststruct2>> rrvar_ev2=new Vector<Action2<Double, teststruct2>>();
    public void  addev2Listener(Action2<Double, teststruct2> listener) {
    synchronized(rrvar_ev2) {
    rrvar_ev2.add(listener);
    }
    }
    public void  removeev2Listener(Action2<Double, teststruct2> listener) {
    synchronized(rrvar_ev2) {
    rrvar_ev2.remove(listener);
    }
    }
    public sub1 get_o1() {
    throw new UnsupportedOperationException();
    }
    public sub1 get_o2(int ind) {
    throw new UnsupportedOperationException();
    }
    public sub1 get_o3(int ind) {
    throw new UnsupportedOperationException();
    }
    public sub1 get_o4(String ind) {
    throw new UnsupportedOperationException();
    }
    public com.robotraconteur.testing.TestService2.subobj get_o5() {
    throw new UnsupportedOperationException();
    }
    public Object get_o6() {
    throw new UnsupportedOperationException();
    }
    public Pipe<double[]> get_p1()
    { throw new UnsupportedOperationException(); }
    public void set_p1(Pipe<double[]> value)
    { throw new IllegalStateException();}
    public Pipe<teststruct2> get_p2()
    { throw new UnsupportedOperationException(); }
    public void set_p2(Pipe<teststruct2> value)
    { throw new IllegalStateException();}
    public Pipe<double[]> get_broadcastpipe()
    { throw new UnsupportedOperationException(); }
    public void set_broadcastpipe(Pipe<double[]> value)
    { throw new IllegalStateException();}
    public Callback<Action> get_cb1()
    { return rrvar_cb1;  }
    public void set_cb1(Callback<Action> value)
    {
    if (rrvar_cb1!=null) throw new IllegalStateException("Callback already set");
    rrvar_cb1= value;
    }
    public Callback<Action2<Double, Double>> get_cb2()
    { return rrvar_cb2;  }
    public void set_cb2(Callback<Action2<Double, Double>> value)
    {
    if (rrvar_cb2!=null) throw new IllegalStateException("Callback already set");
    rrvar_cb2= value;
    }
    public Callback<Func2<Double,Double,Double>> get_cb3()
    { return rrvar_cb3;  }
    public void set_cb3(Callback<Func2<Double,Double,Double>> value)
    {
    if (rrvar_cb3!=null) throw new IllegalStateException("Callback already set");
    rrvar_cb3= value;
    }
    public Callback<Func<Integer>> get_cb_meaning_of_life()
    { return rrvar_cb_meaning_of_life;  }
    public void set_cb_meaning_of_life(Callback<Func<Integer>> value)
    {
    if (rrvar_cb_meaning_of_life!=null) throw new IllegalStateException("Callback already set");
    rrvar_cb_meaning_of_life= value;
    }
    public Callback<Action> get_cb_errtest()
    { return rrvar_cb_errtest;  }
    public void set_cb_errtest(Callback<Action> value)
    {
    if (rrvar_cb_errtest!=null) throw new IllegalStateException("Callback already set");
    rrvar_cb_errtest= value;
    }
    public Wire<double[]> get_w1()
    { throw new UnsupportedOperationException(); }
    public void set_w1(Wire<double[]> value)
    { throw new UnsupportedOperationException();}
    public Wire<teststruct2> get_w2()
    { throw new UnsupportedOperationException(); }
    public void set_w2(Wire<teststruct2> value)
    { throw new UnsupportedOperationException();}
    public Wire<MultiDimArray> get_w3()
    { throw new UnsupportedOperationException(); }
    public void set_w3(Wire<MultiDimArray> value)
    { throw new UnsupportedOperationException();}
    public Wire<double[]> get_broadcastwire()
    { throw new UnsupportedOperationException(); }
    public void set_broadcastwire(Wire<double[]> value)
    { throw new UnsupportedOperationException();}
    public ArrayMemory<double[]> get_m1()
    { throw new UnsupportedOperationException(); }
    public MultiDimArrayMemory<double[]> get_m2()
    { throw new UnsupportedOperationException(); }
    public MultiDimArrayMemory<UnsignedBytes> get_m3()
    { throw new UnsupportedOperationException(); }
}
