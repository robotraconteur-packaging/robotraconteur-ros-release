//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService2;
import java.util.*;
import com.robotraconteur.*;
public class subobj_stub extends ServiceStub implements subobj, async_subobj {
    public subobj_stub(WrappedServiceStub innerstub) {
        super(innerstub); 
    }
    public double add_val(double v) {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    MessageElement rr_me=null;
    try {
    MessageElementUtil.addMessageElementDispose(rr_param, MessageElementUtil.<double[]>packArray("v",new double[] {v}));
    rr_me=rr_innerstub.functionCall("add_val",rr_param);
    return (MessageElementUtil.<double[]>castDataAndDispose(rr_me))[0];
    }
    finally {
    rr_param.delete();
    if (rr_me!=null) rr_me.delete();
    }
    }
    public void dispatchEvent(String rr_membername, vectorptr_messageelement rr_m) {
    }
    public MessageElement callbackCall(String rr_membername, vectorptr_messageelement rr_m) {
    throw new MemberNotFoundException("Member not found");
    }
    public void async_add_val(double v,Action2<Double,RuntimeException> rr_handler,int rr_timeout)
    {
    vectorptr_messageelement rr_param=new vectorptr_messageelement();
    try {
    MessageElementUtil.addMessageElementDispose(rr_param,MessageElementUtil.<double[]>packArray("v",new double[] {v}));
    rr_async_FunctionCall("add_val",rr_param,new rrend_async_add_val(),rr_handler,rr_timeout);
    }
    finally {
    rr_param.delete();
    }
    }
    protected class rrend_async_add_val implements Action3<MessageElement,RuntimeException,Object> {
    public void action(MessageElement ret ,RuntimeException err,Object param)
    {
    Action2<Double,RuntimeException> rr_handler=(Action2<Double,RuntimeException>)param;
    if (err!=null)
    {
    rr_handler.action(0.0,err);
    return;
    }
    Double rr_ret;
    try {
    rr_ret=(MessageElementUtil.<double[]>castDataAndDispose(ret))[0];
    } catch (RuntimeException err2) {
    rr_handler.action(0.0,err2);
    return;
    }
    rr_handler.action(rr_ret, null);
    }
    }
}
