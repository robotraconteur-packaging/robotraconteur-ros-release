from setuptools import setup, Distribution


# Suggested at https://github.com/google/or-tools/issues/616
from setuptools.command.install import install
class InstallPlatlib(install):
    def finalize_options(self):
        install.finalize_options(self)
        if self.distribution.has_ext_modules():
            self.install_lib = self.install_platlib

# Suggested at https://stackoverflow.com/questions/24071491/how-can-i-make-a-python-wheel-from-an-existing-native-library
class BinaryDistribution(Distribution):
    def has_ext_modules(foo):
        return True

setup(name='RobotRaconteur',
      version='@ROBOTRACONTEUR_VERSION_PY@',
      description='Robot Raconteur Python Library',
      author='John Wason',
      author_email='wason@wasontech.com',
      url='http://robotraconteur.com/',
      packages=['RobotRaconteur'],
      package_data={'RobotRaconteur': ['_RobotRaconteurPython.pyd', '_RobotRaconteurPython.so']},
	  distclass=BinaryDistribution,
	  license='Apache-2.0',
	  install_requires=['numpy'],
	  long_description='This package contains Python wrappers for the Robot Raconteur communication framework. ' \
	  'See http://robotraconteur.com/documentation for more information.',
      cmdclass={'install': InstallPlatlib}
     )