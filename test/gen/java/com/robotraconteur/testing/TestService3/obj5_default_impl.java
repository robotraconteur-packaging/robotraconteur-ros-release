//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService3;
import java.util.*;
import com.robotraconteur.*;
public class obj5_default_impl implements obj5{
    protected PipeBroadcaster<int[]> rrvar_q1;
    protected PipeBroadcaster<int[]> rrvar_q2;
    protected WireBroadcaster<int[]> rrvar_w1;
    protected WireBroadcaster<int[]> rrvar_w2;
    protected double rrvar_p1;
    public double get_p1() { return rrvar_p1; }
    public void set_p1(double value) { rrvar_p1 = value; }
    protected double rrvar_p2;
    public double get_p2() { return rrvar_p2; }
    public void set_p2(double value) { rrvar_p2 = value; }
    protected double rrvar_p3;
    public double get_p3() { return rrvar_p3; }
    public void set_p3(double value) { rrvar_p3 = value; }
    public int f1() {
    throw new UnsupportedOperationException();    }
    public int f2() {
    throw new UnsupportedOperationException();    }
    public Pipe<int[]> get_q1()
    { return rrvar_q1.getPipe();  }
    public void set_q1(Pipe<int[]> value)
    {
    if (rrvar_q1!=null) throw new IllegalStateException("Pipe already set");
    rrvar_q1= new PipeBroadcaster<int[]>(value);
    }
    public Pipe<int[]> get_q2()
    { return rrvar_q2.getPipe();  }
    public void set_q2(Pipe<int[]> value)
    {
    if (rrvar_q2!=null) throw new IllegalStateException("Pipe already set");
    rrvar_q2= new PipeBroadcaster<int[]>(value);
    }
    public Wire<int[]> get_w1()
    { return rrvar_w1.getWire();  }
    public void set_w1(Wire<int[]> value)
    {
    if (rrvar_w1!=null) throw new IllegalStateException("Pipe already set");
    rrvar_w1= new WireBroadcaster<int[]>(value);
    }
    public Wire<int[]> get_w2()
    { return rrvar_w2.getWire();  }
    public void set_w2(Wire<int[]> value)
    {
    if (rrvar_w2!=null) throw new IllegalStateException("Pipe already set");
    rrvar_w2= new WireBroadcaster<int[]>(value);
    }
    public ArrayMemory<int[]> get_m1()
    { throw new UnsupportedOperationException(); }
    public ArrayMemory<int[]> get_m2()
    { throw new UnsupportedOperationException(); }
    public ArrayMemory<int[]> get_m3()
    { throw new UnsupportedOperationException(); }
}
