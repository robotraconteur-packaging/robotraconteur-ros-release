//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService3;
import java.util.*;
import com.robotraconteur.*;
public class obj5_skel extends ServiceSkel {
    protected obj5 obj;
    public obj5_skel(Object o) { 
    super(o);
    obj=(obj5)o;
    }
    public void releaseCastObject() { 
    obj=null;
    super.releaseCastObject();
    }
    public MessageElement callGetProperty(String membername) {
    if(membername.equals( "p1"))
    {
    double ret=obj.get_p1();
    return MessageElementUtil.<double[]>packArray("return",new double[] {ret});
    }
    if(membername.equals( "p2"))
    {
    double ret=obj.get_p2();
    return MessageElementUtil.<double[]>packArray("return",new double[] {ret});
    }
    if(membername.equals( "p3"))
    {
    double ret=obj.get_p3();
    return MessageElementUtil.<double[]>packArray("return",new double[] {ret});
    }
    throw new MemberNotFoundException("Member not found");
    }
    public void callSetProperty(String membername, MessageElement m) {
    if(membername.equals( "p1"))
    {
    obj.set_p1((MessageElementUtil.<double[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "p2"))
    {
    obj.set_p2((MessageElementUtil.<double[]>castDataAndDispose(m))[0]);
    return;
    }
    if(membername.equals( "p3"))
    {
    obj.set_p3((MessageElementUtil.<double[]>castDataAndDispose(m))[0]);
    return;
    }
    throw new MemberNotFoundException("Member not found");
    }
    public MessageElement callFunction(String rr_membername, vectorptr_messageelement rr_m) {
    if(rr_membername.equals( "f1"))
    {
    int rr_ret=obj.f1();
    return MessageElementUtil.<int[]>packArray("return",new int[] {rr_ret});
    }
    if(rr_membername.equals( "f2"))
    {
    int rr_ret=obj.f2();
    return MessageElementUtil.<int[]>packArray("return",new int[] {rr_ret});
    }
    throw new MemberNotFoundException("Member not found");
    }
    public Object getSubObj(String name, String ind) {
    throw new MemberNotFoundException("");
    }
    public void registerEvents(Object obj1) {
    obj=(obj5)obj1;
    }
    public void unregisterEvents(Object obj1) {
    obj=(obj5)obj1;
    }
    public Object getCallbackFunction(long endpoint, String membername) {
    throw new MemberNotFoundException("Member not found");
    }
    public  void initPipeServers(Object obj1) {
    obj=(obj5)obj1;
    obj.set_q1(new Pipe<int[]>(innerskel.getPipe("q1")));
    obj.set_q2(new Pipe<int[]>(innerskel.getPipe("q2")));
    }
    public void initCallbackServers(Object obj1) {
    obj=(obj5)obj1;
    }
    public void initWireServers(Object obj1) {
    obj=(obj5)obj1;
    obj.set_w1(new Wire<int[]>(innerskel.getWire("w1")));
    obj.set_w2(new Wire<int[]>(innerskel.getWire("w2")));
    }
    public WrappedArrayMemoryDirector getArrayMemory(String name) {
    if(name.equals( "m1")) {
    WrappedArrayMemoryDirectorJava<int[]> dir=new  WrappedArrayMemoryDirectorJava<int[]>(obj.get_m1());
    return dir;
    }
    if(name.equals( "m2")) {
    WrappedArrayMemoryDirectorJava<int[]> dir=new  WrappedArrayMemoryDirectorJava<int[]>(obj.get_m2());
    return dir;
    }
    if(name.equals( "m3")) {
    WrappedArrayMemoryDirectorJava<int[]> dir=new  WrappedArrayMemoryDirectorJava<int[]>(obj.get_m3());
    return dir;
    }
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedMultiDimArrayMemoryDirector getMultiDimArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedPodArrayMemoryDirector getPodArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedPodMultiDimArrayMemoryDirector getPodMultiDimArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedNamedArrayMemoryDirector getNamedArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public WrappedNamedMultiDimArrayMemoryDirector getNamedMultiDimArrayMemory(String name) {
    throw new MemberNotFoundException("Member Not Found");
    }
    public String getRRType() { return "com.robotraconteur.testing.TestService3.obj5"; }
}
