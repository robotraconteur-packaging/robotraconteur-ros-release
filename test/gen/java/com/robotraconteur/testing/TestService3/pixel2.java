//This file is automatically generated. DO NOT EDIT!
package com.robotraconteur.testing.TestService3;
import java.util.*;
import com.robotraconteur.*;
public class pixel2 implements RRNamedArray 
{
    public UnsignedByte c;
    public pixel d;
    public pixel e;
    public pixel[] f;
    public pixel g;
    public pixel2()
    {
    c = new UnsignedByte((byte)0);
    d = new pixel();
    e = new pixel();
    f = new pixel[7];
    for (int i=0; i<7; i++) f[i] = new pixel();
    g = new pixel();
    }
    public UnsignedBytes getNumericArray()
    {
    UnsignedBytes a = new UnsignedBytes(31);
    getNumericArray(a,0);
    return a;
    }
    public void getNumericArray(UnsignedBytes buffer, int offset)
    {
    buffer.value[offset + 0] = c.value;
    d.getNumericArray(buffer, offset + 1);
    e.getNumericArray(buffer, offset + 4);
    pixel.getNumericArray(f, buffer, offset + 7);
    g.getNumericArray(buffer, offset + 28);
    }
    public void assignFromNumericArray(UnsignedBytes buffer, int offset)
    {
    c = buffer.get(offset + 0);
    d.assignFromNumericArray(buffer, offset + 1);
    e.assignFromNumericArray(buffer, offset + 4);
    pixel.assignFromNumericArray(f, buffer, offset + 7);
    g.assignFromNumericArray(buffer, offset + 28);
    }
    public static UnsignedBytes getNumericArray(pixel2[] s)
    {
    UnsignedBytes a = new UnsignedBytes(31 * s.length);
    getNumericArray(s,a,0);
    return a;
    }
    public static void getNumericArray(pixel2[] s, UnsignedBytes a, int offset)
    {
    for (int i=0; i<s.length; i++)
    {
    s[i].getNumericArray(a, offset + 31 * i);
    }
    }
    public static void assignFromNumericArray(pixel2[] s, UnsignedBytes a, int offset)
    {
    for (int i=0; i<s.length; i++)
    {
    s[i].assignFromNumericArray(a, offset + 31 * i);
    }
    }
}

